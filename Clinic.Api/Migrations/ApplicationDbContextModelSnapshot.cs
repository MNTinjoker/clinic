// <auto-generated />
using System;
using Clinic.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AnswersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Question_Id")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("refTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentCancelTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppointmentCancelTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentRemindersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppointmentConfirmationContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AppointmentConfirmationHideAddress")
                        .HasColumnType("bit");

                    b.Property<string>("AppointmentConfirmationSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DefaultReminderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmailReminderContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailReminderEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("EmailReminderSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("ReminderPeriod")
                        .HasColumnType("int");

                    b.Property<string>("ReminderTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SMSReminderEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("SMSReminderText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SkipWeekends")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AppointmentReminders");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentServicesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("BillableItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppointmentServices");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentTypePractitionersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppointmentTypePractitioners");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTreatmentNoteTemplate")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsFirstEncounter")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaximumNumberOfPatients")
                        .HasColumnType("int");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RelatedBillableItem2Id")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedBillableItem3Id")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedBillableItemId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedProduct2Id")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedProduct3Id")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedProductId")
                        .HasColumnType("int");

                    b.Property<bool>("SendBookingConfirmationEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendReminderEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInOnlineBookings")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AppointmentTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.AppointmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentCancelTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AppointmentSMS")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Arrived")
                        .HasColumnType("int");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<bool>("ByInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("CancelNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndsAfter")
                        .HasColumnType("int");

                    b.Property<bool>("IgnoreDidNotCome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnavailbleBlock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatEvery")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatId")
                        .HasColumnType("int");

                    b.Property<bool>("SendReminder")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WaitListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.BillableItemsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEditPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoCopyTreatment")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("ForceOneInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTreatmentDataRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LastTimeColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedAccept")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderInItemCategory")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TreatmentTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BillableItems");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.BusinessServicesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillableItemId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessServices");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.BusinessesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AppointmentByOutOfRange")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckScheduleOnInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DisplayInOnlineBooking")
                        .HasColumnType("bit");

                    b.Property<string>("InfoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInPatient")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceBase")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SMSEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInvoiceInRecord")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zoom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ChatMessageInfoesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UserFromId")
                        .HasColumnType("int");

                    b.Property<int?>("UserToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatMessageInfoes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.CommunicationCategoriesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommunicationCategories");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.CommunicationDirectionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommunicationDirections");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.CommunicationTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComunicationTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.CommunicationsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommunicationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommunicationDirectionId")
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ContactPhonesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNoTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PhoneNoType_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContactPhones");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ContactTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ContactsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ContriesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contries");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.DateConvertContext", b =>
                {
                    b.Property<string>("GrigoryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShamsiDate")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.DocumentNumbersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentNumbers");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.DocumentsPrintingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountStatments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BottomMarginLetters")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DisplayLogoOnInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("DisplayLogoOnTreatment")
                        .HasColumnType("bit");

                    b.Property<bool>("HideUnSelectedCheckBoxesOnTreadtment")
                        .HasColumnType("bit");

                    b.Property<string>("InvoicePageSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeftMarginLetters")
                        .HasColumnType("int");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LogoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogoHeight")
                        .HasColumnType("int");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("RightMarginLetters")
                        .HasColumnType("int");

                    b.Property<bool>("ShowLogoOnLetters")
                        .HasColumnType("bit");

                    b.Property<int>("SpaceUnderneathLogoOnLetters")
                        .HasColumnType("int");

                    b.Property<int>("TopMargin")
                        .HasColumnType("int");

                    b.Property<int>("TopMarginOnLetters")
                        .HasColumnType("int");

                    b.Property<string>("TopMarginOnTreatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentPageSize")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentsPrintings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ExpenseItemsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitCostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseItems");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ExpensesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("ExpenseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.FileAttachmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileContent")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileAttachments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.GeneralSettingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BirthDateOnAppointment")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckInvoiceDateByPractitionerSchedule")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DisallowOutOfTurnWhenHaveTime")
                        .HasColumnType("bit");

                    b.Property<string>("EmailFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailOnAppointment")
                        .HasColumnType("bit");

                    b.Property<string>("EmptyDayColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDayColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Insurer1OnAppointment")
                        .HasColumnType("bit");

                    b.Property<bool>("Insurer2OnAppointment")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("MultipleAppointments")
                        .HasColumnType("bit");

                    b.Property<string>("NotFullDayColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientCodeStartFrom")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PractitionerCanOnlyReadLettersTheyAuthoredThemselves")
                        .HasColumnType("bit");

                    b.Property<bool>("PractitionerCannotSeeAnyFinancialDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceptionistsCanOnlyReadLettersTheyAuthoredThemselves")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceptionistsCanViewFileAttachment")
                        .HasColumnType("bit");

                    b.Property<bool>("Referr1OnAppointment")
                        .HasColumnType("bit");

                    b.Property<bool>("Referr2OnAppointment")
                        .HasColumnType("bit");

                    b.Property<bool>("SetPayableAmountInNewPaymentCash")
                        .HasColumnType("bit");

                    b.Property<bool>("SetReceivebleAmountInNewReceiptBank")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCurrentTimeIndicator")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowPatientNotes")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeSlotHeight")
                        .HasColumnType("int");

                    b.Property<string>("WebSiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zoom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSettings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.HolidaysContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.InvoiceItemHistoriesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<decimal>("NewQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OldQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InvoiceItemHistories");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.InvoiceItemsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.InvoiceSettingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("DefaultNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingInvoiceContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingInvoiceSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingOutstandingInvoiceTo3rdPartyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingOutstandingInvoiceTo3rdPartySubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingOutstandingInvoiceToPatientContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingOutstandingInvoiceToPatientSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingPaidInvoice3rdPartyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailingPaidInvoice3rdPartySubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraBusinessInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HideLogoAndLetterHead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("OfferText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowBusinessContactInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowNextAppointmentTime")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPatientDOB")
                        .HasColumnType("bit");

                    b.Property<int>("StartingInvoiceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSettings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.InvoicesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPayLater")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Anesthesia")
                        .HasColumnType("bit");

                    b.Property<int?>("AnesthesiaTechnicianId")
                        .HasColumnType("int");

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("AssistantId")
                        .HasColumnType("int");

                    b.Property<int>("BillStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("BusinessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BusinessDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ElectroTechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraPatientInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceBillStatusId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("IssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Receipt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecordStateId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserAllowPayLaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ItemCategoriesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DefaultClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.JobsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.LetterTemplatesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LetterTemplates");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.LettersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LetterNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.LicencesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Licences");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.LoginHistoriesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginHistories");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.MedicalArtsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("OrderOf")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicalArts");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.MedicalNotesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicalNotes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.MessageBoardsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageBoards");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.MessageCommentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MessageBoard_Id")
                        .HasColumnType("int");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MessageComments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.OnlineBookingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("EmailBookingNotifications")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnlineBookingsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAppointmentsPerDaySegment")
                        .HasColumnType("int");

                    b.Property<int>("MinimumAdvanceTimeRequiredForBookings")
                        .HasColumnType("int");

                    b.Property<int>("MinimumNoticeForCancellations")
                        .HasColumnType("int");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("RequireAddressOfPatient")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSBookingNotifications")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAppointmentDuration")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPrice")
                        .HasColumnType("bit");

                    b.Property<string>("TimeSelectionInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineBookings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.OutOfTurnExceptionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrigoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("OutOfTurn")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutOfTurnExceptions");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PatientFastMessagesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Params")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientFastMessages");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PatientFieldsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Address1")
                        .HasColumnType("int");

                    b.Property<int?>("Address2")
                        .HasColumnType("int");

                    b.Property<int?>("Address3")
                        .HasColumnType("int");

                    b.Property<int?>("BirthDate")
                        .HasColumnType("int");

                    b.Property<int?>("City")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("Email")
                        .HasColumnType("int");

                    b.Property<int?>("EmailInvoiceTo")
                        .HasColumnType("int");

                    b.Property<int?>("EmergencyContact")
                        .HasColumnType("int");

                    b.Property<int?>("FatherName")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceExtraInformation")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceTo")
                        .HasColumnType("int");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("NationalCode")
                        .HasColumnType("int");

                    b.Property<int?>("Notes")
                        .HasColumnType("int");

                    b.Property<int?>("PatientPhones")
                        .HasColumnType("int");

                    b.Property<int?>("PostCode")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiveBookingConfirmationEmails")
                        .HasColumnType("int");

                    b.Property<int?>("ReferenceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringContact2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringContactId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringDoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInpatientInsurerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInsurer2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInsurerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringPatientId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedPatients")
                        .HasColumnType("int");

                    b.Property<int?>("ReminderTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<int?>("UnsubscribeFromSMSMarketing")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientFields");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PatientMessagesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientMessages");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PatientPhonesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNoTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientPhones");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PatientsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailInvoiceTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("InBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceExtraInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OutBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Paperless")
                        .HasColumnType("bit");

                    b.Property<int?>("PatientCode")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveBookingConfirmationEmails")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferringContact2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringContactId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringDoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInpatientInsurerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInsurer2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringInsurerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferringPatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReminderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<bool>("UnsubscribeFromSMSMarketing")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PaymentInvoicesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentInvoices");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PaymentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EFTPos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Other")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PeriodsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PhoneNoTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNoTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PractitionerTimeExceptionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PractitionerTimeExceptions");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.PreAppointmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PreAppointments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ProductCardexesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int");

                    b.Property<string>("ObjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockAdjustmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductCardexes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ProductsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StockLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.QuestionValuesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<string>("selectedValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionValues");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.QuestionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<bool>("canCopy")
                        .HasColumnType("bit");

                    b.Property<bool?>("canFocusEnd")
                        .HasColumnType("bit");

                    b.Property<string>("defaultAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("masterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("normalAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("refId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RecallTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int>("RecallIn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RecallTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RecallsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecallOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecallTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Recalled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RecalledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Recalls");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ReceiptInvoicesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReceiptInvoices");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ReceiptTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReceiptTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ReceiptsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EFTPos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Other")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptNo")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ReferralSourcesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReferralSources");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RelatedPatientsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("RelationId")
                        .HasColumnType("int");

                    b.Property<int>("RelationPatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RelatedPatients");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RelationsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.ReminderTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReminderTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RolesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPayLater")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPayOverBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowReceiptOverBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeView")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemView")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAcceptItem")
                        .HasColumnType("bit");

                    b.Property<bool>("CashierByCashAndETFPosReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangeInvoiceAfterReceive")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangePatientRecordStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactView")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DiscountReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseView")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstEncounterReport")
                        .HasColumnType("bit");

                    b.Property<bool>("GeneralSettingCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("GeneralSettingView")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayView")
                        .HasColumnType("bit");

                    b.Property<bool>("InInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvoiceItemChangeReport")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceView")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryView")
                        .HasColumnType("bit");

                    b.Property<bool>("JobCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("JobDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("JobView")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LetterCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateView")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterView")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalAlertCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalAlertDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("MedicalAlertUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalRecordSend")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalRecordView")
                        .HasColumnType("bit");

                    b.Property<bool?>("MergePatients")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NotArraivedPatientsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("OutInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionView")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientFieldCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientFieldView")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientView")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentAllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentView")
                        .HasColumnType("bit");

                    b.Property<bool>("PractitionerReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductCardexCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductView")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptAllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptPaymentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptView")
                        .HasColumnType("bit");

                    b.Property<bool>("Report")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleView")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSSettingCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSSettingView")
                        .HasColumnType("bit");

                    b.Property<bool>("SetAppointmentPermission")
                        .HasColumnType("bit");

                    b.Property<bool>("Setting")
                        .HasColumnType("bit");

                    b.Property<bool>("SummaryReport")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionView")
                        .HasColumnType("bit");

                    b.Property<bool>("TotdayAppointmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateView")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("UnChangeInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("UserCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("UserDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("UserView")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisitReport")
                        .HasColumnType("bit");

                    b.Property<bool>("WatingReport")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.SMSSettingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReminderDaysBefore")
                        .HasColumnType("int");

                    b.Property<bool>("SendAfterAppointment")
                        .HasColumnType("bit");

                    b.Property<string>("SendAfterAppointmentTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendAfterAppointmentTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("SendBeforeAppointmentDay")
                        .HasColumnType("bit");

                    b.Property<string>("SendBeforeAppointmentDayTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendBeforeAppointmentDayTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SMSSettings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.SchedulesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("FromTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBreak")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<string>("ToTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.SectionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("defaultClose")
                        .HasColumnType("bit");

                    b.Property<bool?>("horizontalDirection")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.StockAdjustmentTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOutput")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseOnAdjust")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("StockAdjustmentTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TimeExceptionTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeExceptionTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TimeExceptionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EndsAfter")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrigoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("OutOfTurn")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("PractitionerTimeExceptionId")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatEvery")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeExceptionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeExceptions");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TitlesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TreatmentTemplatesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordering")
                        .HasColumnType("int");

                    b.Property<string>("PrintTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowPatientBirthDate")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPatientReferenceNumber")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TreatmentTemplates");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TreatmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserAppointmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int?>("CalendarTimeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CalendarTimeTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("MultipleAppointment")
                        .HasColumnType("bit");

                    b.Property<int?>("NewPatientAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OutOfTurn")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserAppointment");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserBusinessesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserBusinesses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanChangeOldTreatment")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConfirmInvoice")
                        .HasColumnType("bit");

                    b.Property<int?>("CancelNotificationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ForgetDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForgetKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPractitioner")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoadLastDataOnNewTreatment")
                        .HasColumnType("bit");

                    b.Property<int>("OutOfRange")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("SMSEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInOnlineBookings")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTreatmentOnClickPatientName")
                        .HasColumnType("bit");

                    b.Property<int>("SuspendReservationDays")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserPhonesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PhoneNoTypeId")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserPhones");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListBusinessesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("WaitList_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaitListBusinesses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListPractitionersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("WaitList_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaitListPractitioners");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailableOnMon")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnSat")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnSun")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnThr")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnTue")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnWed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("OnlyOutsideBussinessHours")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<bool>("Urgent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("WaitLists");
                });
#pragma warning restore 612, 618
        }
    }
}
