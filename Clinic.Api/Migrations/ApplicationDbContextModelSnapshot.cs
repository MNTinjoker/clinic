// <auto-generated />
using System;
using Clinic.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RoleContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RolesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPayLater")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPayOverBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowReceiptOverBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentTypeView")
                        .HasColumnType("bit");

                    b.Property<bool>("AppointmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AttachmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("BillableItemView")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("BusinessView")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAcceptItem")
                        .HasColumnType("bit");

                    b.Property<bool>("CashierByCashAndETFPosReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangeInvoiceAfterReceive")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangePatientRecordStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ContactView")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("DiscountReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpenseView")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstEncounterReport")
                        .HasColumnType("bit");

                    b.Property<bool>("GeneralSettingCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("GeneralSettingView")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayView")
                        .HasColumnType("bit");

                    b.Property<bool>("InInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("InvoiceItemChangeReport")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceView")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ItemCategoryView")
                        .HasColumnType("bit");

                    b.Property<bool>("JobCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("JobDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("JobView")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LetterCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterTemplateView")
                        .HasColumnType("bit");

                    b.Property<bool>("LetterView")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalAlertCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalAlertDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("MedicalAlertUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalRecordSend")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalRecordView")
                        .HasColumnType("bit");

                    b.Property<bool?>("MergePatients")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NotArraivedPatientsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("OutInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("OutOfTurnExceptionView")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientFieldCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientFieldView")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientView")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentAllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentView")
                        .HasColumnType("bit");

                    b.Property<bool>("PractitionerReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductCardexCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductView")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptAllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptPaymentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiptView")
                        .HasColumnType("bit");

                    b.Property<bool>("Report")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleView")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSSettingCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSSettingView")
                        .HasColumnType("bit");

                    b.Property<bool>("SetAppointmentPermission")
                        .HasColumnType("bit");

                    b.Property<bool>("Setting")
                        .HasColumnType("bit");

                    b.Property<bool>("SummaryReport")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TimeExceptionView")
                        .HasColumnType("bit");

                    b.Property<bool>("TotdayAppointmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentTemplateView")
                        .HasColumnType("bit");

                    b.Property<bool>("TreatmentView")
                        .HasColumnType("bit");

                    b.Property<bool>("UnChangeInvoiceReport")
                        .HasColumnType("bit");

                    b.Property<bool>("UserCreateAndUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("UserDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("UserView")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisitReport")
                        .HasColumnType("bit");

                    b.Property<bool>("WatingReport")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RolesCtx");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.SMSSettingsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReminderDaysBefore")
                        .HasColumnType("int");

                    b.Property<bool>("SendAfterAppointment")
                        .HasColumnType("bit");

                    b.Property<string>("SendAfterAppointmentTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendAfterAppointmentTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("SendBeforeAppointmentDay")
                        .HasColumnType("bit");

                    b.Property<string>("SendBeforeAppointmentDayTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendBeforeAppointmentDayTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SMSSettings");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.SectionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("defaultClose")
                        .HasColumnType("bit");

                    b.Property<bool?>("horizontalDirection")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.StockAdjustmentTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOutput")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseOnAdjust")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("StockAdjustmentTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TimeExceptionTypesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeExceptionTypes");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TimeExceptionsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EndsAfter")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrigoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("OutOfTurn")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("PractitionerTimeExceptionId")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatEvery")
                        .HasColumnType("int");

                    b.Property<int?>("RepeatId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeExceptionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeExceptions");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TitlesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.TreatmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserAppointmentsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int?>("CalendarTimeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CalendarTimeTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("MultipleAppointment")
                        .HasColumnType("bit");

                    b.Property<int?>("NewPatientAppointmentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OutOfTurn")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserAppointment");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserBusinessesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserBusinesses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanChangeOldTreatment")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConfirmInvoice")
                        .HasColumnType("bit");

                    b.Property<int?>("CancelNotificationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultTreatmentTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ForgetDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForgetKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPractitioner")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoadLastDataOnNewTreatment")
                        .HasColumnType("bit");

                    b.Property<int>("OutOfRange")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("SMSEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInOnlineBookings")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTreatmentOnClickPatientName")
                        .HasColumnType("bit");

                    b.Property<int>("SuspendReservationDays")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserPhonesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PhoneNoTypeId")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserPhones");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListBusinessesContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("WaitList_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaitListBusinesses");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListPractitionersContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("WaitList_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaitListPractitioners");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.WaitListsContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailableOnMon")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnSat")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnSun")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnThr")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnTue")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableOnWed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<bool>("OnlyOutsideBussinessHours")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<bool>("Urgent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("WaitLists");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.UserContext", b =>
                {
                    b.HasOne("Clinic.Api.Domain.Entities.RoleContext", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Clinic.Api.Domain.Entities.RoleContext", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
